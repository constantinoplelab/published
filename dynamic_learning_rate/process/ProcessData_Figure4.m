function ProcessData_Figure4(pstruct, bstruct, BestFitEarly, BestFitLate,...
    codedir, savedir)  
%ProcessData_Figure4 - function to process data to generate Figure 4. Saves
% data in savedir to be accessed by PlotFigure4
% INPUTS:
% pstruct - photometry data struct. Not public until all papers using this
%   data are published
% bstruct - behavioral data for photometry sessions. Not public until all 
%   papers using this data are published
% BestFitEarly - BestFit.mat file found at: Mah_CellReports_BehavorialData/FitAll_ITI_VanillaAlpha_First10/BestFit.mat
%   from Zenodo
% BestFitLate - BestFit.mat file found at: Mah_CellReports_BehavorialData/FitAll_ITI_VanillaAlpha_Last10/BestFit.mat
%   from Zenodo
% codedir - Directory of code (e.g., published/dynamic_learning_rate/)
% savedir - Location you would like the outputs to be saved

%% Set up paths
s = pathsep;
pathStr = [s, path, s];
onPath  = contains(pathStr,...
    codedir, 'IgnoreCase', ispc);
if ~onPath % only add code dir to path if it already isn't
    addpath(genpath(codedir))
end

%% CPIn Responses

% Pull rat list
ratList = fields(pstruct); 

% Analysis parameters
nback = 10; % number of previous trials for regression
auc1 = 0; % Time 1 for AUC calculation
auc2 = 0.5; % Time 2 for AUC calculation

% Preallocate data structures
[CPInByRewMean, CPInByRewSEM, CPIn20ByBlk] =...
    deal(cell(length(ratList), 1));

[betas_RewardHistory_All, betas_RewardHistory_Early,...
    betas_RewardHistory_Late] =...
    deal(nan(length(ratList), nback+2));

timesCPIn = pstruct.G008.CPIn.times; % Time vector for one example rat

% loop over rats
for rr = 1:length(ratList)
    fprintf('%d out of %d\n', rr, length(ratList))

    % Pull photometery and behavioral data for each rat
    pdata = pstruct.(ratList{rr}).CPIn;
    bdata = bstruct.(ratList{rr}).CPIn;

    % Average CPIn response by reward in mixed blocks
    [CPInByRewMean{rr}, CPInByRewSEM{rr}] =...
        DA_CPInByReward(pdata.Data, bdata);

    % Average CPIn response by 20 ul across blocks
    CPIn20ByBlk{rr} =...
        DA_CPInByBlock(pdata.Data, bdata);
    
    % Previous reward regression
    usethese = bdata.Block==1; % Use mixed blocks
    betas_RewardHistory_All(rr,:) =...
        DA_rewardHistoryRegression(pdata, bdata, nback,...
        usethese, auc1, auc2);
end

% Calculate time bins for AUC
dt = mean(diff(pstruct.(ratList{1}).CPIn.times));
[~, i1] = min(abs(pstruct.(ratList{1}).CPIn.times - auc1));
[~, i2] = min(abs(pstruct.(ratList{1}).CPIn.times - auc2));

% Average and SEM response for each volume in mixed blocks across rats
CPInByRewMean_All = cell2mat(arrayfun(@(rew)...
        mean(cell2mat(arrayfun(@(rat)...
        CPInByRewMean{rat}(rew,:), (1:length(ratList))',...
        UniformOutput=false))), 1:5, UniformOutput=false)');
CPInByRewSEM_All = cell2mat(arrayfun(@(rew)...
        sem(cell2mat(arrayfun(@(rat)...
        CPInByRewMean{rat}(rew,:), (1:length(ratList))',...
        UniformOutput=false))), 1:5, UniformOutput=false)');

% AUC for each volume in mixed blocks for each rats
CPInByRewAUC =...
    cell2mat(arrayfun(@(rat)...
    sum(CPInByRewMean{rat}(:, i1:i2), 2)*dt,...
    1:length(ratList), UniformOutput=false))';

% Average and SEM response for 20 ul in each block across rats
CPIn20ByBlkMean_All = cell2mat(arrayfun(@(blk)...
        mean(cell2mat(arrayfun(@(rat)...
        CPIn20ByBlk{rat}(blk,:), (1:length(ratList))',...
        UniformOutput=false))), 1:3, UniformOutput=false)');
CPIn20ByBlkSEM_All = cell2mat(arrayfun(@(blk)...
        sem(cell2mat(arrayfun(@(rat)...
        CPIn20ByBlk{rat}(blk,:), (1:length(ratList))',...
        UniformOutput=false))), 1:3, UniformOutput=false)');

% AUC for 20 ul in each block for each rats
CPInBy20BlkAUC =...
    cell2mat(arrayfun(@(rat)...
    sum(CPIn20ByBlk{rat}(:, i1:i2), 2)*dt,...
    1:length(ratList), UniformOutput=false))';

%% Early-Late Resposes

nbins = 15; % number of bins for discretizing RPEs
RPEBins = linspace(-3, 3, nbins+1); % Bin edges for discretizing RPEs
xsAUC = (RPEBins(1:end-1) + RPEBins(2:end))/2; % Mean of each bin

% Preallocate data structures
[RPE, AUC] = deal(cell(size(ratList)));

[AUCbyRPE_EarlyMean, AUCbyRPE_EarlySEM,...
    AUCbyRPE_LateMean, AUCbyRPE_LateSEM] =...
    deal(nan(length(ratList), nbins));

[betas_RPE_EarlyPos, betas_RPE_EarlyNeg,...
    betas_RPE_LatePos, betas_RPE_LateNeg,...
    RPEbySess_early, AUCbySess_early, statsPos_early,...
    RPEbySess_late, AUCbySess_late,...
    statsPos_late] =...
    deal(cell(size(ratList)));

% loop over each rat
for rr = 1:length(ratList)
    fprintf('%d out of %d\n', rr, length(ratList)) % check progress

    % Pull photometry and behavioral data
    pdata = pstruct.(ratList{rr}).CPIn;
    bdata = bstruct.(ratList{rr}).CPIn;

    % Reward History Regression
    usethese = bdata.Block==1; % Only mixed blocks

    % Early trials
    usetheseEarly = usethese &...
        bdata.BlockPosition >= 0 & bdata.BlockPosition <= 10; 
    betas_RewardHistory_Early(rr,:) =...
        DA_rewardHistoryRegression(pdata, bdata, nback,...
        usetheseEarly, auc1, auc2); % Late trials

    % Late trials
    usetheseLate = usethese &...
        bdata.BlockPosition >= -10 & bdata.BlockPosition <= 0;
    betas_RewardHistory_Late(rr,:) =...
        DA_rewardHistoryRegression(pdata, bdata, nback,...
        usetheseLate, auc1, auc2);

    % Match model and photometry data
    ratname = ratList{rr};
    [RPE{rr}, AUC{rr}] = align_pdata_and_mdl(ratname,...
        pdata, bdata,...
        BestFitEarly, BestFitLate,...
        auc1, auc2);

    % DA AUC by RPE
    [AUCbyRPE_EarlyMean(rr,:), AUCbyRPE_EarlySEM(rr,:)] =...
        DA_CPInByRPE(AUC{rr}, RPE{rr}.Early,...
        RPEBins, usetheseEarly, 3.5);
    [AUCbyRPE_LateMean(rr,:), AUCbyRPE_LateSEM(rr,:)] =...
        DA_CPInByRPE(AUC{rr}, RPE{rr}.Late,...
        RPEBins, usetheseLate, 3.5);

    % DA AUC by RPE - Linear Regression
    [betas_RPE_EarlyPos{rr}, betas_RPE_EarlyNeg{rr},...
        RPEbySess_early{rr}, AUCbySess_early{rr},...
        statsPos_early{rr}] =...
        DA_CPInByRPE_Regression(bdata,...
        AUC{rr}, RPE{rr}.Early, usetheseEarly, 4);

    [betas_RPE_LatePos{rr}, betas_RPE_LateNeg{rr},...
        RPEbySess_late{rr}, AUCbySess_late{rr},...
        statsPos_late{rr}] =...
        DA_CPInByRPE_Regression(bdata,...
        AUC{rr},  RPE{rr}.Late, usetheseLate, 4);
end

% For each rat
betas_RPE_EarlyPos_All = cell2mat(betas_RPE_EarlyPos);
betas_RPE_LatePos_All = cell2mat(betas_RPE_LatePos);
betas_RPE_EarlyNeg_All = cell2mat(betas_RPE_EarlyNeg);
betas_RPE_LateNeg_All = cell2mat(betas_RPE_LateNeg);

%% Side On/Side Off Response

nbins = 10; % number of bins for discretizing delays 
bins = linspace(0, 15, nbins+1); % bin edges for discretizing delays
xsDelay = (bins(1:end-1) + bins(2:end))/2; % Mean of each bin

auc1 = 0; auc2 = 1; % Times for AUC calculation
bl1 = -0.5; bl2 = 0; % Times for baseline calculation

% Preallocate data strctures
[sideOnByDelay, sideOffByDelay] = deal(cell(size(ratList)));
AUCBaselineCorrected = nan(length(ratList), nbins);

timesSideOn = pstruct.G008.SideOn.times; % Times aligned to Side On
timesSideOff = pstruct.G008.SideOff.times; % Times aligned to Side Off

% Loop over rats
for rr = 1:length(ratList)
    fprintf('%d out of %d\n', rr, length(ratList)) % Display progress

    % Discretize Side On response by reward delay
    sideOnByDelay{rr} =...
        DA_ResponseByDelay(pstruct.(ratList{rr}).SideOn,...
        bstruct.(ratList{rr}).SideOn, bins,...
        auc1, auc2, bl1, bl2);

    % Discretize Side Off response by reward delay    
    [sideOffByDelay{rr}, AUCBaselineCorrected(rr,:)] =...
        DA_ResponseByDelay(pstruct.(ratList{rr}).SideOff,...
        bstruct.(ratList{rr}).SideOff, bins,...
        auc1, auc2, bl1, bl2);

end

% Average over rats
sideOnByDelayMean = cell2mat(arrayfun(@(d)...
    mean(cell2mat(arrayfun(@(r) sideOnByDelay{r}(d,:),...
    1:length(ratList),...
    'UniformOutput', false)')), 1:nbins, UniformOutput=false)');

sideOnByDelaySEM = cell2mat(arrayfun(@(d)...
    sem(cell2mat(arrayfun(@(r) sideOnByDelay{r}(d,:),...
    1:length(ratList),...
    'UniformOutput', false)')), 1:nbins, UniformOutput=false)');

sideOffByDelayMean = cell2mat(arrayfun(@(d)...
    mean(cell2mat(arrayfun(@(r) sideOffByDelay{r}(d,:),...
    1:length(ratList),...
    'UniformOutput', false)')), 1:nbins, UniformOutput=false)');

sideOffByDelaySEM = cell2mat(arrayfun(@(d)...
    sem(cell2mat(arrayfun(@(r) sideOffByDelay{r}(d,:),...
    1:length(ratList),...
    'UniformOutput', false)')), 1:nbins, UniformOutput=false)');

%% Save data

save([savedir 'Figure4_Data'], 'CPInByRewMean', 'CPInByRewSEM',...
    'betas_RewardHistory_All', ...
    'betas_RewardHistory_Early', 'betas_RewardHistory_Late', ...
    'CPInByRewMean_All', 'CPInByRewSEM_All', 'CPInByRewAUC', ...
    'CPIn20ByBlkMean_All', 'CPIn20ByBlkSEM_All', 'CPInBy20BlkAUC', ...
    'xsAUC', 'AUCbyRPE_LateMean', 'betas_RPE_EarlyPos', ...
    'betas_RPE_EarlyNeg', 'betas_RPE_LatePos', 'betas_RPE_LateNeg',...
    'RPEbySess_early', 'AUCbySess_early', 'RPEbySess_late', 'AUCbySess_late',...
    'betas_RPE_EarlyPos_All', 'betas_RPE_LatePos_All',...
    'betas_RPE_EarlyNeg_All', 'betas_RPE_LateNeg_All', 'xsDelay', ...
    'AUCBaselineCorrected','sideOnByDelayMean', 'sideOnByDelaySEM',...
    'sideOffByDelayMean', 'sideOffByDelaySEM', 'ratList', 'timesCPIn',...
    'timesSideOn', 'timesSideOff', 'nback', 'bins')



