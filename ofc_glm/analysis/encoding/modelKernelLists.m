function [masterlist,alignlist,pairedlist,grouplist,STRlist] = modelKernelLists()
%a running list of all kernel names used in the models. These lists
%dictate how kernels are plotted and used in most of the analysis
%script. if you make a typo in your kernel, it could get missed!
%
%naming convention is Java style: no spaces, lower case first word,
%uppercase other words. if you need a brief discriminator between two
%similar kernels, add it with an underscore. The scheme right now is 
%(L/R)(prev)$NAME_extra or (prev)$NAME_extra, where prev means
%covariate relating to previous trial. keep names as simple and short
%as possible, since they often get put into figure legends. Avoid
%adding the time-locked event in the covariate, as this adds confusion.
%example: choiceRPE is confusing, as is choiceLoss. For now, if you
%have an acausal kernel as well as a causal one, keep the same name,
%but append (ac). a space is ok there.
%
%
%OUPUTS;
%   masterlist: name of every kernel used so far
%   alignlist: corresponding preferred alignment when plotting, and if it
%       is time-locked to an event, what it is locked to
%   pairedlist: (to be deprecated) sets of kernels that should be grouped
%       for kernel comparisons at neuron level, 
%   grouplist: (update to pairedlist) the name of an associated group to 
%       which for each kernel belongs, for plotting kernel comparisons
%   STRlist: similar grouping, but for how kernels should be plotting in
%       single-trial respone plots
    
    
%list of every possible kernel in a model. Add to this if you make a model
%with a new kernel
masterlist =    {'LFlash','RFlash','LClick','RClick',...
                'prevWin','prevLoss','Left','Right',...
                'win','loss',...
                'prevVol','prevRPE','start','prevRewardRate','prevOptOut',...
                'LFirstFlash','RFirstFlash','sessProg',...
                'prevWin (ac)','prevLoss (ac)',...     
                'risky (ac)','safe (ac)',...
                'prevVol (ac)','prevRPE (ac)','start (ac)','prevRewardRate (ac)',...
                'prevOptOut (ac)','sessProg (ac)',...
                'vol','RPE','rewardRate',...
                'LFirstClick','RFirstCLick',...
                'vol_no0'};
  
%what time-locked event matters most for each kernel
alignlist =    {'start','start','start','start',...
    'start','start','leavecpoke','leavecpoke',...
    'choice','choice',...
    'start','start','start','start','start',...
    'LFirstFlash','RFirstFlash','sessProg',...
    'start','start',...     
    'choice','choice',...
    'start','start','start','start',...
    'start','start',...
    'choice','choice','choice',...
    'start','start',...
    'choice'};
    
            
%a grouping just for mutual information and kernel groupings. This is
%closely related to condtiional PSTH plots, but does not (I think)
%have a direct corespondance. at least not yet
grouplist =    {'flash','flash','click','click',...
                'prevReward','prevReward','LRchoice','LRchoice',...
                'reward','reward',...           
                'prevVol','prevRPE','start','prevRewardRate','prevReward',...
                'flash','flash','sessProg',...
                'prevReward','prevReward',...     
                'riskySafe','riskySafe',...
                'prevVol','prevRPE','start','prevRewardRate',...
                'prevReward','sessProg',...
                'vol','RPE','rewardRate',...
                'click','click',...
                'vol'};


%how kernels will be grouped for comparison in single trial response analysis  
STRlist = {   'stim','stim','stim','stim',...
                'start','start','leavecpoke','leavecpoke',...
                'choice','choice',...
                'start','start','start','start','start',...
                'stim','stim','start',...
                'start','start',...
                'choice','choice',...
                'start','start','start','start'...
                'start','start',...
                'choice','choice','choice',...
                'stim','stim',...
                'choice'};

%how kernels will be grouped for behavioral comparisons            
pairedlist = {  {'LFlash','RFlash','LFirstFlash','RFirstFlash'},...
                {'LClick','RClick','LFirstClick','RFirstClick'},...
                {'prevWin','prevLoss','prevOptOut','start'}...
                {'Left','Right'},...
                {'win','loss'},...
                {'prevWin (ac)','prevLoss (ac)','prevOptOut (ac)','start (ac)'}...
                {'risky (ac)','safe (ac)'},...
                {'prevRewardRate'},{'prevRewardRate (ac)'},...
                {'sessProg'},{'sessProg (ac)'},...
                {'prevVol'},{'prevVol (ac)'},{'prevRPE'},{'prevRPE (ac)'},...
                {'vol'},{'RPE'},{'rewardRate'},...
                {'vol_no0'}};
            
     
            
            
         